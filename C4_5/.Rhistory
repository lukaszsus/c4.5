"Precision"=list(),
"Recall"=list(),
"F1"=list()
),
"KFold_N6"=list(
"tree_params"=Weka_control(N=6),
"Accuracy"=list(),
"Precision"=list(),
"Recall"=list(),
"F1"=list()
),
"KFold_N9"=list(
"tree_params"=Weka_control(N=9),
"Accuracy"=list(),
"Precision"=list(),
"Recall"=list(),
"F1"=list()
)
)
outcomes <- explore_crossval_params(params)
save_to_file(outcomes, '../outcomes/skfold_diabetes.csv')
help(J48)
set.seed(5)
ds_path <- '../data/wine/wine.data'
data <- load_dataset(ds_path)
tree_params = Weka_control(C = 0.01)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
set.seed(5)
ds_path <- '../data/wine/wine.data'
data <- load_dataset(ds_path)
tree_params = Weka_control(C = 0.01)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
set.seed(5)
ds_path <- '../data/wine/wine.data'
data <- load_dataset(ds_path)
tree_params = Weka_control(C = 0.01)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
tree_params = Weka_control(C = 0.5)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
set.seed(5)
ds_path <- '../data/wine/wine.data'
data <- load_dataset(ds_path)
tree_params = Weka_control(M = 2)
tree <- J48(class~.,
data=data,
control=tree_params)
set.seed(5)
ds_path <- '../data/wine/wine.data'
data <- load_dataset(ds_path)
tree_params = Weka_control(M = 10)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
################
ds_path <- '../data/glass/glass.data'
data <- load_dataset(ds_path)
tree_params = Weka_control(C=0.01)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
tree_params = Weka_control(C=0.5)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
################
ds_path <- '../data/glass/glass.data'
data <- load_dataset(ds_path)
tree_params = Weka_control(C=0.5)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
ds_path <- '../data/diabetes/diabetes.data'
data <- load_dataset(ds_path)
tree_params = Weka_control(C=0.5)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
tree_params = Weka_control(M=10)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
ds_path <- '../data/diabetes/iris.data'
data <- load_dataset(ds_path)
tree_params = Weka_control(M=10)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
#################
ds_path <- '../data/wine/wine.data'
data <- load_dataset(ds_path)
tree_params = Weka_control(M = 10)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
tree_params = Weka_control(M = 1)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
#################
ds_path <- '../data/wine/wine.data'
data <- load_dataset(ds_path)
tree_params = Weka_control(C = 0.01)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
tree_params = Weka_control(C = 0.5)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
tree_params = Weka_control(C = 0.25)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
tree_params = Weka_control(N = 2)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
tree_params = Weka_control(N = 9)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
help(which)
source('c45lib.R')
#################
ds_path <- '../data/diabetes/diabetes.data'
data <- load_dataset(ds_path)
fold_indices <- k_fold_indices(data, k_folds, stratified)
# which - slice of indices which are TRUE (first param is bool list of indices)
# arr.ind - should array indices should be returned
curr_indices <- which(fold_indices==i, arr.ind=TRUE)
fold_indices <- k_fold_indices(data, k_folds, stratified)
source('c45lib.R')
set.seed(5)
k_folds = 2
stratified = TRUE
fold_indices <- k_fold_indices(data, k_folds, stratified)
# which - slice of indices which are TRUE (first param is bool list of indices)
# arr.ind - should array indices should be returned
curr_indices <- which(fold_indices==i, arr.ind=TRUE)
# which - slice of indices which are TRUE (first param is bool list of indices)
# arr.ind - should array indices should be returned
curr_indices <- which(fold_indices==1, arr.ind=TRUE)
test_data <- dataset[curr_indices, ]
train_data <- dataset[-curr_indices, ]    # -curr_indices = take others
tree_params = Weka_control(M=10)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
set.seed(5)
k_folds = 10
stratified = TRUE
#################
ds_path <- '../data/diabetes/diabetes.data'
data <- load_dataset(ds_path)
fold_indices <- k_fold_indices(data, k_folds, stratified)
# which - slice of indices which are TRUE (first param is bool list of indices)
# arr.ind - should array indices should be returned
curr_indices <- which(fold_indices==1, arr.ind=TRUE)
test_data <- dataset[curr_indices, ]
train_data <- dataset[-curr_indices, ]    # -curr_indices = take others
tree_params = Weka_control(M=10)
tree <- J48(class~.,
data=data,
control=tree_params)
tree_params = Weka_control(M=10)
tree <- J48(class~.,
data=test_data,
control=tree_params)
plot(tree)
source('c45lib.R')
set.seed(5)
k_folds = 10
stratified = TRUE
#################
ds_path <- '../data/diabetes/diabetes.data'
data <- load_dataset(ds_path)
fold_indices <- k_fold_indices(data, k_folds, stratified)
# which - slice of indices which are TRUE (first param is bool list of indices)
# arr.ind - should array indices should be returned
curr_indices <- which(fold_indices==1, arr.ind=TRUE)
small_data <- dataset[curr_indices, ]
tree_params = Weka_control(C=0.01)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(C=0.5)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
# which - slice of indices which are TRUE (first param is bool list of indices)
# arr.ind - should array indices should be returned
curr_indices <- which(fold_indices==1, arr.ind=TRUE)
small_data <- dataset[curr_indices, ]
tree_params = Weka_control(C=0.5)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
################
ds_path <- '../data/glass/glass.data'
data <- load_dataset(ds_path)
tree_params = Weka_control(N=9)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
plot(tree)
plot(tree)
plot(tree)
source('c45lib.R')
set.seed(5)
k_folds = 10
stratified = TRUE
#################
ds_path <- '../data/diabetes/diabetes.data'
data <- load_dataset(ds_path)
fold_indices <- k_fold_indices(data, k_folds, stratified)
# which - slice of indices which are TRUE (first param is bool list of indices)
# arr.ind - should array indices should be returned
curr_indices <- which(fold_indices==1, arr.ind=TRUE)
small_data <- dataset[curr_indices, ]
tree_params = Weka_control(C=0.5)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(C=0.01)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(N=9)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(N=2)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
source('c45lib.R')
set.seed(5)
k_folds = 10
stratified = TRUE
ds_path <- '../data/diabetes/iris.data'
data <- load_dataset(ds_path)
tree_params = Weka_control(M=10)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
set.seed(5)
k_folds = 10
stratified = TRUE
#################
ds_path <- '../data/wine/wine.data'
data <- load_dataset(ds_path)
tree_params = Weka_control(M=2)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
tree_params = Weka_control(M=10)
tree <- J48(class~.,
data=data,
control=tree_params)
plot(tree)
fold_indices <- k_fold_indices(data, k_folds, stratified)
# which - slice of indices which are TRUE (first param is bool list of indices)
# arr.ind - should array indices should be returned
curr_indices <- which(fold_indices==1, arr.ind=TRUE)
small_data <- dataset[curr_indices, ]
tree_params = Weka_control(C=0.01)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
# which - slice of indices which are TRUE (first param is bool list of indices)
# arr.ind - should array indices should be returned
curr_indices <- which(fold_indices==1, arr.ind=TRUE)
small_data <- dataset[curr_indices, ]
fold_indices <- k_fold_indices(data, k_folds, stratified)
# which - slice of indices which are TRUE (first param is bool list of indices)
# arr.ind - should array indices should be returned
curr_indices <- which(fold_indices==1, arr.ind=TRUE)
#################
ds_path <- '../data/diabetes/diabetes.data'
data <- load_dataset(ds_path)
fold_indices <- k_fold_indices(data, k_folds, stratified)
# which - slice of indices which are TRUE (first param is bool list of indices)
# arr.ind - should array indices should be returned
curr_indices <- which(fold_indices==1, arr.ind=TRUE)
small_data <- dataset[curr_indices, ]
tree_params = Weka_control(C=0.01)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
source('c45lib.R')
set.seed(5)
k_folds = 10
stratified = TRUE
#################
ds_path <- '../data/diabetes/diabetes.data'
data <- load_dataset(ds_path)
fold_indices <- k_fold_indices(data, k_folds, stratified)
# which - slice of indices which are TRUE (first param is bool list of indices)
# arr.ind - should array indices should be returned
curr_indices <- which(fold_indices==1, arr.ind=TRUE)
small_data <- dataset[curr_indices, ]
small_data <- data[curr_indices, ]
tree_params = Weka_control(C=0.01)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(C=0.5)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
source('c45lib.R')
set.seed(5)
k_folds = 10
stratified = TRUE
#################
ds_path <- '../data/diabetes/diabetes.data'
data <- load_dataset(ds_path)
fold_indices <- k_fold_indices(data, k_folds, stratified)
# which - slice of indices which are TRUE (first param is bool list of indices)
# arr.ind - should array indices should be returned
curr_indices <- which(fold_indices==1, arr.ind=TRUE)
small_data <- data[curr_indices, ]
tree_params = Weka_control(C=0.01)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(C=0.5)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(N=2)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
plot(tree)
plot(tree)
plot(tree)
plot(tree)
plot(tree)
tree_params = Weka_control(N=9)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
source('c45lib.R')
set.seed(5)
k_folds = 10
stratified = TRUE
ds_path <- '../data/diabetes/iris.data'
data <- load_dataset(ds_path)
# tree_params = Weka_control(M=10)
# tree <- J48(class~.,
#             data=data,
#             control=tree_params)
# plot(tree)
# tree_params = Weka_control(M=10)
# tree <- J48(class~.,
#             data=data,
#             control=tree_params)
# plot(tree)
#################
ds_path <- '../data/diabetes/diabetes.data'
data <- load_dataset(ds_path)
fold_indices <- k_fold_indices(data, k_folds, stratified)
# which - slice of indices which are TRUE (first param is bool list of indices)
# arr.ind - should array indices should be returned
curr_indices <- which(fold_indices==1, arr.ind=TRUE)
small_data <- data[curr_indices, ]
tree_params = Weka_control(C=0.01)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(C=0.5)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(N=2)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(R=TRUE, N=2)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(R=TRUE, N=9)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(R=TRUE, N=2)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
#################
ds_path <- '../data/glass/glass.data'
data <- load_dataset(ds_path)
tree_params = Weka_control(R=TRUE, N=2)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
#################
ds_path <- '../data/glass/glass.data'
data <- load_dataset(ds_path)
tree_params = Weka_control(R=TRUE, N=2)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(R=TRUE, N=9)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
fold_indices <- k_fold_indices(data, k_folds, stratified)
# which - slice of indices which are TRUE (first param is bool list of indices)
# arr.ind - should array indices should be returned
curr_indices <- which(fold_indices==1, arr.ind=TRUE)
small_data <- data[curr_indices, ]
tree_params = Weka_control(R=TRUE, N=2)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(R=TRUE, N=9)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(R=TRUE, N=2)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(R=TRUE, N=9)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
source('c45lib.R')
set.seed(5)
k_folds = 10
stratified = TRUE
ds_path <- '../data/diabetes/iris.data'
data <- load_dataset(ds_path)
#################
ds_path <- '../data/diabetes/diabetes.data'
data <- load_dataset(ds_path)
fold_indices <- k_fold_indices(data, k_folds, stratified)
# which - slice of indices which are TRUE (first param is bool list of indices)
# arr.ind - should array indices should be returned
curr_indices <- which(fold_indices==1, arr.ind=TRUE)
small_data <- data[curr_indices, ]
tree_params = Weka_control(C=0.01)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
tree_params = Weka_control(C=0.5)
tree <- J48(class~.,
data=small_data,
control=tree_params)
plot(tree)
